@gmf(foo="foo")
@Ecore(invocationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot", settingDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot", validationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot")
@namespace(uri="http://classdiagrameditor/1.0", prefix="classdiagrameditor")
package classdiagrameditor;

abstract class ObjetoNombrado {
  attr String nombre;
}

@Ecore(constraints="clasesDistintoNombre")
@gmf.diagram(foo="foo")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(clasesDistintoNombre="self.clases->isUnique(nombre)")
class DiagramEditor extends ObjetoNombrado {
  val Clase[*] clases;
  val Relacion[*] relaciones;
}

@Ecore(constraints="metodosDistintoNombre atributosDistintoNombre hijaDeSiMisma agregadaPorSiMisma compuestaPorSiMisma")
@gmf.node(label="nombre", label.icon="false", tool.description="Clase", tool.name="Clase")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(metodosDistintoNombre="self.metodos->isUnique(nombre)", atributosDistintoNombre="self.atributos->isUnique(nombre)", hijaDeSiMisma="self->closure(padre)->excludes(self)", agregadaPorSiMisma="self.agrega <> self.es_agregada", compuestaPorSiMisma="self.compone <> self.es_compuesta")
class Clase extends ObjetoNombrado {
@gmf.compartment
  val Atributo[*] atributos;
@gmf.compartment
  val Metodo[*] metodos;
  ref Clase[*]#hija padre;

  @gmf.link(target.decoration="closedarrow", style="solid", tool.description="Hija", tool.name="Hija", color = "0,0,0")
  ref Clase[*]#padre hija;
  ref Relacion[*]#origen relaciona;
  ref Relacion[*]#destino es_relacionada;
  ref Agregacion[*]#origen_a agrega;
  ref Agregacion[*]#destino_a es_agregada;
  ref Composicion[*]#origen_c compone;
  ref Composicion[*]#destino_c es_compuesta;
}

@gmf.node(label="nombre, tipo", label.icon="false", tool.description="Atributo", tool.name="Atributo", label.pattern="{0} : {1}", label.edit.pattern="{0}")
class Atributo extends ObjetoNombrado {
  attr TiposBasicos tipo;
}

enum TiposBasicos {
  binary = 0;
  boolean = 1;
  date = 2;
  datetime = 3;
  decimal = 4;
  float = 5;
  integer = 6;
  string = 7;
  text = 8;
  time = 9;
  timestamp = 10;
}

@gmf.node(label="nombre", label.icon="false", tool.description="Método", tool.name="Método")
class Metodo extends ObjetoNombrado {
}

@gmf.link(target.decoration="arrow", target="destino", source.decoration="none", source="origen", style="solid", label="nombre", border.color="0,0,0", color = "0,0,0", tool.description="Relación", tool.name="Relación")
class Relacion extends ObjetoNombrado {
  ref Clase[1]#relaciona origen;
  ref Clase[1]#es_relacionada destino;
}

@gmf.link(target.decoration="arrow", target="destino_a", source.decoration="rhomb", source="origen_a", style="solid", label="nombre", border.color="0,0,0", color = "0,0,0", tool.description="Agregación", tool.name="Agregación")
class Agregacion extends Relacion {
  ref Clase[1]#agrega origen_a;
  ref Clase[1]#es_agregada destino_a;
}

@gmf.link(target.decoration="arrow", target="destino_c", source.decoration="filledrhomb", source="origen_c", style="solid", label="nombre", border.color="0,0,0", color = "0,0,0", tool.description="Composición", tool.name="Composición")
class Composicion extends Relacion {
  ref Clase[1]#compone origen_c;
  ref Clase[1]#es_compuesta destino_c;
}

