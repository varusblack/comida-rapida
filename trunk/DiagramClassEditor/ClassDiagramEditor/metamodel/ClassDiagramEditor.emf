@gmf(foo="foo")
@Ecore(invocationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot", settingDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot", validationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot")
@namespace(uri="http://classdiagrameditor/1.0", prefix="classdiagrameditor")
package classdiagrameditor;

@Ecore(constraints="nombreNoValido")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(nombreNoValido="Sequence{1 .. self.nombre.size()}->collect(i | self.nombre.substring(i, i))->excludes(' ')")
abstract class ElementoDiagrama {
  attr String nombre;
}

@Ecore(constraints="clasesDistintoNombre relacionesBTSinCorresponder")
@gmf.diagram(foo="foo")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(clasesDistintoNombre="self.clases->isUnique(nombre)", relacionesBTSinCorresponder="
		clases->collect(c | c.relacionesBT)->size() = clases->collect(c| c.relacionesBT->collect(rBT | c.atributos->select(a | a.nombre.toLowerCase() = rBT.destino_BT.nombre.toString().toLowerCase())))->size()")
class DiagramEditor extends ElementoDiagrama {
  val Clase[*] clases;
}

@Ecore(constraints="atributosDistintoNombre")
@gmf.node(label="nombre", label.icon="false", tool.description="Clase", tool.name="Clase")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(atributosDistintoNombre="self.atributos->isUnique(nombre)")
class Clase extends ElementoDiagrama {

  @gmf.compartment(layout="list")
  val Atributo[*] atributos;
  val RelacionBelongTo[*] relacionesBT;
  ref RelacionBelongTo[*]#origen_BT relacionaBT;
  ref RelacionBelongTo[*]#destino_BT es_relacionadaBT;
  val RelacionHasManyThrough[*] relacionesHMT;
  ref RelacionHasManyThrough[*]#origen_HMT relacionaHMT;
  ref RelacionHasManyThrough[*]#destino_HMT es_relacionadaHMT;
}

@gmf.node(label="nombre, tipo", label.icon="true", figure="rectangle", tool.description="Atributo", tool.name="Atributo", label.pattern="{0} : {1}", label.edit.pattern="{0}")
class Atributo extends ElementoDiagrama {
  attr TiposBasicos tipo;
}

enum TiposBasicos {
  binary = 0;
  boolean = 1;
  date = 2;
  datetime = 3;
  decimal = 4;
  float = 5;
  integer = 6;
  string = 7;
  text = 8;
  time = 9;
  timestamp = 10;
}

@Ecore(constraints="relacionadaBTASiMisma")
@gmf.link(target.decoration="arrow", target="destino_BT", source.decoration="none", source="origen_BT", style="solid", label="nombre", border.color="255,0,255", color="255,0,255", tool.description="Relación Belongs to", tool.name="Relación Belongs to")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(relacionadaBTASiMisma="self.destino_BT <> self.origen_BT")
class RelacionBelongTo extends ElementoDiagrama {
  ref Clase[1]#relacionaBT origen_BT;
  ref Clase[1]#es_relacionadaBT destino_BT;
}

@Ecore(constraints="relacionadaHMTPorSiMisma")
@gmf.link(target.decoration="arrow", target="destino_HMT", source.decoration="none", source="origen_HMT", style="solid", label="nombre", border.color="0,0,255", color="0,0,255", tool.description="Relación Has many through", tool.name="Relación Has many through")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(relacionadaHMTPorSiMisma="self.destino_HMT <> self.origen_HMT")
class RelacionHasManyThrough extends ElementoDiagrama {
  ref Clase[1]#relacionaHMT origen_HMT;
  ref Clase[1]#es_relacionadaHMT destino_HMT;
}

